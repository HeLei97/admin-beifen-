<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>权限分配</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="renderer" content="webkit">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link rel="stylesheet" href="../res/layui/layui/css/layui.css" media="all">
    <style>
        .layui-fluid {
            padding: 15px;
        }
    </style>
</head>
<body>
<div class="layui-fluid">
    <div class="layui-card" id="card">
        <div class="layui-card-body" id="cardBoby">
            <form class="layui-form" action="">
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">用户组组名</label>
                        <div class="layui-input-inline">
                            <input name="grouping_name" class="layui-input" type="text" autocomplete="off">
                        </div>
                    </div>
                    <div class="layui-inline">
                        <label class="layui-form-label">账号状态</label>
                        <div class="layui-input-inline">
                            <select name="state">
                                <option value="">全部</option>
                                <option value="0">正常</option>
                                <option value="1">锁定</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-inline">
                        <div class="layui-input-inline">
                            <button class="layui-btn layuiadmin-btn-order" lay-submit lay-filter="submint">
                                <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>
                            </button>
                            <button type="reset" class="layui-btn layuiadmin-btn-order" lay-submit>
                                重置
                            </button>
                        </div>
                    </div>
                </div>
            </form>
            <fieldset class="layui-elem-field layui-field-title" style="margin-top: 20px;">
            </fieldset>
            <div>
                <div class="layui-row">
                    <div class="layui-col-xs9">
                        <script type="text/html" id="toolbar">
                            <div class="layui-btn-container">
                                <button class="layui-btn layui-btn-sm" lay-event="add" th:if="${add!=null}"><i th:class="'layui-icon '+${add?.icon}"></i>[[${add?.name}]]</button>
                            </div>
                        </script>
                        <table class="layui-hide" id="Authority" lay-filter="Authority"></table>
                        <script id="checkboxTpl" type="text/html">
                            <!-- 这里的 checked 的状态只是演示 -->
                            <input type="checkbox" name="lock" value="{{d.ID}}" title="锁定" lay-filter="lock" {{ d.state== 0
                                   ? '' : 'checked' }}>
                        </script>

                        <script id="operation" type="text/html">
                            <a class="layui-btn layui-btn-xs" lay-event="edit" th:if="${edit!=null}" ><i th:class="'layui-icon '+${edit?.icon}"></i>[[${edit.name}]]</a>
                            <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del" th:if="${del!=null}"><i th:class="'layui-icon '+${del?.icon}"></i>[[${del.name}]]</a>
                        </script>
                    </div>
                    <div class="layui-col-xs3">
                        <div class="grid-demo" style="padding: 10px">
                            <div class="layui-btn-container">
                                <button type="button" class="layui-btn layui-btn-sm" lay-demo="getChecked" th:if="${save!=null}"><i th:class="'layui-icon '+${save?.icon}"></i>[[${save.name}]]
                                </button>
<!--                                <button type="button" class="layui-btn layui-btn-sm" lay-demo="setChecked">全选-->
<!--                                </button>-->
                                <button type="button" class="layui-btn layui-btn-sm" lay-demo="reload">重置</button>
                            </div>
                            <div id="menu" class="demo-tree-more" lay-filter="menu"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
<script src="../res/layui/layui/layui.js"></script>
<script>
    layui.config({
        base: './res/layui/' //静态资源所在路径
    }).extend({
        index: 'lib/index' //主入口模块
    }).use('index');

</script>
<script type="text/javascript" th:inline="none">
    layui.use(['tree', 'util', 'table'], function () {
        var table = layui.table
            , form = layui.form;
        var $ = layui.$;
        var  json;
        var tree = layui.tree
            , layer = layui.layer
            , util = layui.util
        table.render({
            elem: '#Authority'
            , url: '/authority/getUserGroup'
            , cellMinWidth: 80
            ,toolbar: '#toolbar'
            , cols: [[
                {type: 'numbers'}
                , {field: 'grouping_name', title: '菜单名称', sort: true}
                , {field: 'remarks', title: '描述', width: 500, sort: true}
                , {field: 'state', title: '是否停用', width: 112, templet: '#checkboxTpl', unresize: true, sort: true}
                , {fixed: 'right', title: '操作', toolbar: '#operation'},
            ]]
            , page: true
        });
        var menu_id;
        var grouping_id;
        //监听行单击事件（双击事件为：rowDouble）
        table.on('rowDouble(Authority)', function(obj){
            var data = obj.data;
            menu_id=data.menu_id;
            grouping_id=data.ID;
            //标注选中样式
            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
            $.ajax({
                url: "/authority/getMenu",
                type: "post",
                data: {"grouping": data.ID},
                dataType: "json",
                beforeSend: function () {
                    var index = layer.load(0, {shade: false});
                }, complete: function () {
                    layer.closeAll();
                }, success: function (data) {
                    if (data.code_type == 0) {
                        tree.render({
                            elem: '#menu'
                            , data: data.data
                            , showCheckbox: true  //是否显示复选框
                            , id: 'menu1'
                            , isJump: true //是否允许点击节点时弹出新窗口跳转
                            , click: function (obj) {
                                var data = obj.data;  //获取当前点击的节点数据
                                layer.msg('状态：' + obj.state + '<br>节点数据：' + JSON.stringify(data));
                            }
                        });
                    } else {
                        layer.msg('获取菜单失败:' + data.msg, {icon: 2});
                        layer.closeAll();
                        //可以重载所有基础参数
                        tree.reload('menu1', {
                            data:{}
                        });
                    }
                },
                error: function (data) {
                    top.layer.msg('网络请求失败，请重试！', {icon: 5});
                }
            });
        });
        //按钮事件
        util.event('lay-demo', {
            getChecked: function (othis) {
                var menu_list=getChecked_list(tree.getChecked('menu1'));//获取选中节点的数据转换成array
                console.log(menu_list);
                if (menu_id!=menu_list){
                    json={"grouping_id": grouping_id,"menu_id":menu_list};
                    checking(1);
                   }
            }
            , setChecked: function () {
                tree.setChecked('menu1', []); //勾选指定节点
            }
            , reload: function () {
                //重载实例
                tree.reload('menu1', {});
            }
        });

    // 获取选中节点的id
    function getChecked_list(data) {
        var id = "";
        $.each(data, function (index, item) {
            //去除ID为负数的,ID为负数则该项为二级菜单
            if (item.id>0){
            if (id != "") {
                id = id + "," + item.id;
            }else{
                id = item.id;
            }
            var i = getChecked_list(item.children);
            if (i != "") {
                id = id + "," + i;
            }
        }});
        return id;
    }
    function checking(number,param) {
        var flag=false;
        layer.prompt({
            formType: 1
            ,title: '敏感操作，请验证口令'
        }, function(value, index){
            var index1;
            $.ajax({
                url: "/user/ConfirmPassword",
                type: "post",
                data: {"operation_pwd":value},
                dataType: "json",
                beforeSend: function () {
                    index1 = layer.load(0, {shade: false});
                }, complete: function () {
                    layer.close(index1);
                }, success: function (data) {
                    if (data.code_type == 0) {
                        layer.close(index);
                        switch (number) {
                            case 1:UpdateAuthority()
                                break;
                            case 'del':DeleteAuthority(param);
                            default: break;
                        }
                    } else {
                        layer.msg('密码错误!', {icon: 2});
                    }
                },
                error: function (data) {
                    top.layer.msg('网络请求失败，请重试！', {icon: 5});
                }
            });
            // layer.close(index);
            //
            // layer.confirm('确定执行操作吗？', function(index) {
            //     table.reload('LAY-user-back-manage');
            //     layer.msg('已删执行');
            // });
        });

    }
    function  UpdateAuthority() {
        $.ajax({
            url: "/authority/UpdateAuthority",
            type: "post",
            data: json,
            dataType: "json",
            beforeSend: function () {
                var index = layer.load(0, {shade: false});
            }, complete: function () {

            }, success: function (data) {
                layer.closeAll();
                if (data.code_type == 0) {
                    layer.msg('操作成功:' + data.msg, {icon: 1});
                } else {
                    layer.msg('操作失败:' + data.msg, {icon: 2});
                }
            },
            error: function (data) {
                top.layer.msg('网络请求失败，请重试！', {icon: 5});
            }
        });
    }
    function DeleteAuthority(id){
        $.ajax({
            url: "/authority/DeleteGroup",
            type: "post",
            data: {"ID":id},
            dataType: "json",
            beforeSend: function () {
                var index = layer.load(0, {shade: false});
            }, complete: function () {

            }, success: function (data) {
                layer.closeAll();
                if (data.code_type == 0) {
                    table.reload('Authority');
                    layer.msg('操作成功:' + data.msg, {icon: 1});
                } else {
                    layer.msg('操作失败:' + data.msg, {icon: 2});
                }
            },
            error: function (data) {
                top.layer.msg('网络请求失败，请重试！', {icon: 5});
            }
        });
    }
        //监听行工具事件
        table.on('tool(Authority)', function(obj){
            var data = obj.data;
            //console.log(obj)
            if(obj.event === 'del'){
                layer.confirm('真的删除行么', function(index){
                    checking("del",data.ID);
                    //obj.del();
                    layer.close(index);
                });
            } else if(obj.event === 'edit'){
                layer.open({
                    type: 2,
                    title: "修改用户组信息",
                    content: '/AddAuthority?ID='+data.ID, //这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content: ['http://sentsin.com', 'no']
                    shade: [0.8, '#393D49'],
                    area: ['600px', '300px'],
                });
            }
        });
        //工具栏事件
        table.on('toolbar(Authority)', function(obj){
            var checkStatus = table.checkStatus(obj.config.id);
            switch(obj.event){
                case 'add':
                    layer.open({
                        type: 2,
                        title: "新增用户组",
                        content: '/AddAuthority', //这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content: ['http://sentsin.com', 'no']
                        shade: [0.8, '#393D49'],
                        area: ['600px', '300px'],
                    });
                    break;
            };
        });
        //监听提交
        form.on('submit(submint)', function (data) {
            table.reload('Authority', {
                where: data.field //设定异步数据接口的额外参数
                //,height: 300
            });
            return false;
        });
        //监听锁定操作
        form.on('checkbox(lock)', function (obj) {
            $.ajax({
                url: "/authority/setGroupLock",
                type: "post",
                data: {"ID": this.value, "lock": obj.elem.checked},
                dataType: "json",
                beforeSend: function () {
                    var index = layer.load(0, {shade: false});
                }, complete: function () {
                    layer.closeAll();
                }, success: function (data) {
                    if (data.code_type == 0) {

                    } else {
                        layer.msg('注册失败:' + data.msg, {icon: 2});
                    }
                },
                error: function (data) {
                    top.layer.msg('网络请求失败，请重试！', {icon: 5});
                }
            });
        });
    });
</script>
</html>