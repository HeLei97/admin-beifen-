<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title></title>
    <link rel="stylesheet" href="../res/layui/layui/css/layui.css" media="all">
    <style>
        .layui-fluid {
            padding: 15px;
        }
    </style>
</head>
<body>
<div class="layui-fluid">
    <div class="layui-card" id="card">
        <div class="layui-card-body" id="cardBoby">
            <button type="button" class="layui-btn layui-btn-primary layui-btn-sm add" th:if="${add!=null}"><i th:class="'layui-icon '+${add?.icon}"></i>[[${add?.name}]]</button>
<!--<button type="button" class="layui-btn layui-btn-primary layui-btn-sm get-checked">获取选中</button>-->
<!--<button type="button" class="layui-btn layui-btn-primary layui-btn-sm refresh">刷新（新增）</button>-->
<button type="button" class="layui-btn layui-btn-primary layui-btn-sm open-all">全部展开</button>
<button type="button" class="layui-btn layui-btn-primary layui-btn-sm close-all">全部关闭</button>
<!--<button type="button" class="layui-btn layui-btn-primary layui-btn-sm change-icon">随机更换小图标</button>-->
<table class="layui-table layui-form" id="tree-table" lay-size="sm"></table>
        </div>
    </div>
</div>
<script src="../res/layui/layui/layui.js"></script>
<script type="text/javascript">
    layui.config({
        base: 'res/tree/',
    })
    layui.use(['treeTable','layer','code','form'],function(){
        var o = layui.$,
            form = layui.form,
            layer = layui.layer,
            treeTable = layui.treeTable;
        var $ = layui.$;
        // 直接下载后url: './data/table-tree.json',这个配置可能看不到数据，改为data:[],获取自己的实际链接返回json数组
        var	re = treeTable.render({
            elem: '#tree-table',
            url: '/authority/getMenulist',
            // data: [{"id":1,"pid":0,"title":"1-1"},{"id":2,"pid":0,"title":"1-2"},{"id":3,"pid":0,"title":"1-3"},{"id":4,"pid":1,"title":"1-1-1"},{"id":5,"pid":1,"title":"1-1-2"},{"id":6,"pid":2,"title":"1-2-1"},{"id":7,"pid":2,"title":"1-2-3"},{"id":8,"pid":3,"title":"1-3-1"},{"id":9,"pid":3,"title":"1-3-2"},{"id":10,"pid":4,"title":"1-1-1-1"},{"id":11,"pid":4,"title":"1-1-1-2"}],
            icon_key: 'title',
            is_checkbox: false,
            checked: {
                key: 'id',
                data: [0,1,4,10,11,5,2,6,7,3,8,9],
            },
            end: function(e){
                form.render();
            },
            cols: [
                {
                    key: 'title',
                    title: '名称',
                    template: function(item){
                        if(item.level == 0){
                            return '<span style="color:red;">'+item.title+'</span>';
                        }else if(item.level == 1){
                            return '<span style="color:green;">'+item.title+'</span>';
                        }else if(item.level == 2){
                            return '<span style="color:#aaa;">'+item.title+'</span>';
                        }
                    }
                },
                {
                    title: 'url',
                    align: 'center',
                    template: function(item){
                        return item.url!=undefined?item.url:"";
                    }
                },
                {
                    title: '图标',
                    align: 'center',
                    template: function(item){
                        return '<i class="layui-icon '+item.icon+'"></i>';
                    }
                },
                {
                    title: '用户组',
                    align: 'center',
                    template: function(item){
                        return item.UserGroup!=undefined?item.UserGroup:"";
                    }
                },{
                    title: '类型',
                    align: 'center',
                    template: function(item){
                        var str;
                        switch (item.type) {
                            case '0':
                                str="父菜单";
                                break;
                            case '1':
                                str="子菜单";
                                break;
                            case '2':
                                str="按钮";
                                break;
                            default:
                                str="未知";
                                break;
                        }
                        return str;
                    }
                },
                {
                    title: '是否锁定',
                    align: 'center',
                    template: function(item){
                        var checked=item.state==1?"checked":"";
                        return '<input type="checkbox" value="'+item.id+'" name="state" title="锁定" lay-filter="lock" '+checked+'>';
                    }
                },
                {
                    title: '操作',
                    align: 'center',
                    template: function(item){
                        var edit = "[[${edit}]]";
                        var del = "[[${del}]]";
                        var html="";
                        if (edit){
                        html+='<a class="layui-btn layui-btn-xs" target="_blank" onclick="edit('+item.id+','+item.pid+',\''+item.UserGroupID+'\','+item.type+')"><i class="layui-icon [[${edit?.icon}]]"></i>[[${edit?.name}]]</a>';
                        }
                        if (del) {
                            html += '<a class="layui-btn layui-btn-danger layui-btn-xs" onclick="checking(\'del\',' + item.id + ')" lay-filter="del"><i class="layui-icon [[${del?.icon}]]"></i>[[${del?.name}]]</a>';
                        }
                        return html;
                    }
                }
            ]
        });

        // 监听展开关闭
        // treeTable.on('tree(flex)',function(data){
        //     layer.msg(JSON.stringify(data));
        // })
        // 监听checkbox选择
        // treeTable.on('tree(box)',function(data){
        //     if(o(data.elem).parents('#tree-table1').length){
        //         var text = [];
        //         o(data.elem).parents('#tree-table1').find('.cbx.layui-form-checked').each(function(){
        //             o(this).parents('[data-pid]').length && text.push(o(this).parents('td').next().find('span').text());
        //         })
        //         o(data.elem).parents('#tree-table1').prev().find('input').val(text.join(','));
        //     }
        //     layer.msg(JSON.stringify(data));
        // })
        // 监听自定义
        // treeTable.on('tree(add)',function(data){
        //     layer.msg(JSON.stringify(data));
        // })
        // // 获取选中值，返回值是一个数组（定义的primary_key参数集合）
        // o('.get-checked').click(function(){
        //     layer.msg('选中参数'+treeTable.checked(re).join(','))
        // })
        // 刷新重载树表（一般在异步处理数据后刷新显示）
        o('.refresh').click(function(){
            //re.data.push({"id":50,"pid":0,"title":"1-4"},{"id":51,"pid":50,"title":"1-4-1"});
            treeTable.render(re);
        })
        //
        o('.add').click(function(){
            layer.open({
                type: 2,
                title: "新增菜单",
                content: '/AddMenu?type=0', //这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content: ['http://sentsin.com', 'no']
                shade: [0.8, '#393D49'],
                area: ['700px', '600px'],
            });
        })
        // 全部展开
        o('.open-all').click(function(){
            treeTable.openAll(re);
        })
        // 全部关闭
        o('.close-all').click(function(){
            treeTable.closeAll(re);
        })
        // 随机更换小图标
        // o('.change-icon').click(function(){
        //     var arr = [
        //         {
        //             open: 'layui-icon layui-icon-set',
        //             close: 'layui-icon layui-icon-set-fill',
        //             left: 16,
        //         },
        //         {
        //             open: 'layui-icon layui-icon-rate',
        //             close: 'layui-icon layui-icon-rate-solid',
        //             left: 16,
        //         },
        //         {
        //             open: 'layui-icon layui-icon-tread',
        //             close: 'layui-icon layui-icon-praise',
        //             left: 16,
        //         },
        //         {
        //             open: 'layui-icon layui-icon-camera',
        //             close: 'layui-icon layui-icon-camera-fill',
        //             left: 16,
        //         },
        //         {
        //             open: 'layui-icon layui-icon-user',
        //             close: 'layui-icon layui-icon-group',
        //             left: 16,
        //         },
        //     ];
        //     var round = Math.round(Math.random()*(arr.length - 1));
        //     re.icon = arr[round];
        //     treeTable.render(re);
        // })
        o('#tree1').on('click','[data-down]',function(){
            o(this).find('span').length && o(this).parents('.layui-unselect').find('input').val(o(this).text());
        })
        o('.layui-select-title').click(function(){
            o(this).parent().hasClass('layui-form-selected') ? o(this).next().hide() : o(this).next().show(),o(this).parent().toggleClass('layui-form-selected');
        })
        o(document).on("click", function(i) {
            !o(i.target).parent().hasClass('layui-select-title') && !o(i.target).parents('table').length && !(!o(i.target).parents('table').length && o(i.target).hasClass('layui-icon')) && o(".layui-form-select").removeClass("layui-form-selected").find('.layui-anim').hide();
        })
        var index;
        //监听锁定操作
        form.on('checkbox(lock)', function(obj){
            //layer.tips(this.value + ' ' + this.name + '：'+ obj.elem.checked, obj.othis);
            $.ajax({
                url: "/authority/setMenuLock",
                type: "post",
                data: {"id": this.value, "lock": obj.elem.checked},
                dataType: "json",
                beforeSend: function () {
                    index = layer.load(0, {shade: false});
                }, complete: function () {
                    layer.close(index);
                }, success: function (data) {
                    if (data.code_type == 0) {
                        layer.msg('操作成功:' + data.msg, {icon: 1});
                    } else {
                        layer.msg('操作失败:' + data.msg, {icon: 2});
                    }
                },
                error: function (data) {
                    top.layer.msg('网络请求失败，请重试！', {icon: 5});
                }
            });
        });
        /**
         * 刷新表格数据
         * @constructor
         */
        window.Refresh=function (){
            treeTable.render(re);
        }
        //监听锁定操作
       function del(id) {
           $.ajax({
               url: "/authority/delMenu",
               type: "post",
               data: {"id":id},
               dataType: "json",
               beforeSend: function () {
                   index1 = layer.load(0, {shade: false});
               }, complete: function () {
                   layer.close(index1);
               }, success: function (data) {
                   if (data.code_type == 0) {
                       treeTable.render(re);
                       layer.msg('删除成功:'+data.msg, {icon: 1});
                   } else {
                       layer.msg('删除失败:'+data.msg, {icon: 2});
                   }
               },
               error: function (data) {
                   top.layer.msg('网络请求失败，请重试！', {icon: 5});
               }
           });
        }
        window.edit=function(id,parent_id,UserGroupID,type,url){
            layer.open({
                type: 2,
                title: "修改用户组",
                content: '/AddMenu?id='+id+'&parent_id='+parent_id+'&UserGroupID='+UserGroupID+'&type='+type, //这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content: ['http://sentsin.com', 'no']
                shade: [0.8, '#393D49'],
                area: ['700px', '600px']
            });
        }
        window.checking=function (method,param) {
            var flag=false;
            layer.prompt({
                formType: 1
                ,title: '敏感操作，请验证口令'
            }, function(value, index){
                var index1;
                $.ajax({
                    url: "/user/ConfirmPassword",
                    type: "post",
                    data: {"operation_pwd":value},
                    dataType: "json",
                    beforeSend: function () {
                        index1 = layer.load(0, {shade: false});
                    }, complete: function () {
                        layer.close(index1);
                    }, success: function (data) {
                        if (data.code_type == 0) {
                            layer.close(index);
                            switch (method) {
                                case 'del':
                                    del(param);
                                    break;
                                default: break;
                            }
                        } else {
                            layer.msg('密码错误!', {icon: 2});
                        }
                    },
                    error: function (data) {
                        top.layer.msg('网络请求失败，请重试！', {icon: 5});
                    }
                });
            });

        }
    })
</script>
</body>
</html>
